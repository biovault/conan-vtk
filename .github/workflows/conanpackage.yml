name: Build

on: [push, pull_request, workflow_dispatch]

jobs:
  # Job to buildwheels on all platforms
  build_wheels:
    name: Build wheels on ${{ matrix.name}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: Windows
            os: windows-2019
            compiler: msvc-2019
            build-cversion: 16
            build-runtime: MD
            build-config: Release

          - name: Linux_gcc10
            os: ubuntu-22.04
            build-compiler: gcc
            build-cversion: 10
            build-config: Release
            build-os: Linux
            build-libcxx: libstdc++

          - name: Linux_gcc11
            os: ubuntu-22.04
            build-compiler: gcc
            build-cversion: 11
            build-config: Release
            build-os: Linux
            build-libcxx: libstdc++

          #- name: Macos_xcode12.4
          #  os: macos-11
          #  build-compiler: apple-clang
          #  build-cversion: "12.0"
          #  build-config: Release
          #  build-os: Macos
          #  build-xcode-version: 12.4
          #  build-libcxx: libc++
          
          - name: Macos_xcode13.4
            os: macos-12
            build-compiler: apple-clang
            build-cversion: 13
            build-config: Release
            build-os: Macos
            build-xcode-version: 13.4
            build-libcxx: libc++

          - name: Macos_xcode14.3
            os: macos-13
            build-compiler: apple-clang
            build-cversion: 14
            build-config: Release
            build-os: Macos
            build-xcode-version: 14.3
            build-libcxx: libc++

    steps:
      - name: Checkout the source
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Select Xcode for Mac only
        if: startsWith(runner.os, 'macOS')
        run: |
          sudo xcode-select -switch /Applications/Xcode_${{matrix.build-xcode-version}}.app

      - name: Setup python 3 version
        uses: actions/setup-python@v2
        with:
          python-version: "3.11"

      - name: Setup gcc for Linux
        if: startsWith(runner.os, 'Linux')
        uses: egor-tensin/setup-gcc@v1
        with:
          version: ${{matrix.build-cversion}}
          platform: x64

      - name: Windows build
        if: startsWith(runner.os, 'Windows')
        uses: ./.github/conan_windows_build
        with:
          conan-visual-version: ${{matrix.build-cversion}}
          conan-visual-runtime: ${{matrix.build-runtime}}
          conan-build-type: ${{matrix.build-config}}
          conan-user: ${{secrets.LKEB_ARTIFACTORY_USER}}
          conan-password: ${{secrets.LKEB_ARTIFACTORY_PASSWORD}}

      - name: Linux Mac build
        if: "!startsWith(runner.os, 'Windows')"
        uses: ./.github/conan_linuxmac_build
        with:
          conan-compiler: ${{matrix.build-compiler}}
          conan-compiler-version: ${{matrix.build-cversion}}
          conan-libcxx-version: ${{matrix.build-libcxx}}
          conan-build-type: ${{matrix.build-config}}
          conan-build-os: ${{matrix.build-os}}
          conan-user: ${{secrets.LKEB_ARTIFACTORY_USER}}
          conan-password: ${{secrets.LKEB_ARTIFACTORY_PASSWORD}}
